// Импорт модуля os
const os = require('os') // встроенный модуль для работы с операционной системой сервера (машины, на которой стоит сервер)

// Основная конфигурация
const config = {
  listenIp: '0.0.0.0', // сервер слушает на всех сетевых интерфейсах
  listenPort: 3016, // порт для mediasoup сервера (отдельный от http порта)

  // Конфигурация mediasoup
  mediasoup: {
    // ! КОЛИЧЕСТВО ЯДЕР(ВОРКЕРОВ) - ДЛЯ ПРОДА
    // numWorkers: Object.keys(os.cpus()).length, // количество workers = количество CPU ядер в системе
    // ! КОЛИЧЕСТВО ЯДЕР(ВОКЕРОВ) - ДЛЯ ДЕВА
    numWorkers: 1,
    // Worker - отдельный процесс mediasoup для обработки медиа (именно обработки)

    // Настройки Worker процессов
    worker: {
      // Диапазон портов RTC
      rtcMinPort: 10000, // минимальный порт для WebRTC
      rtcMaxPort: 20000, // максимальный порт для WebRTC
      // диапазон: 10000 портов (около 5000 соединений)

      // Логирование
      logLevel: 'debug', // максимальный уровень логирования
      logTags: ['info', 'ice', 'dtls', 'rtp', 'srtp', 'rtcp'], // типы событий для логирования: общая информация, ice кандидаты и соединения, шифрование, rtp пакеты, шифрование, контрольные пакеты
    },

    // Конфигурация Router и кодеков
    // Router - управляет медиа потоками в комнате, определяет поддерживаемые кодеки
    router: {
      mediaCodecs: [
        {
          kind: 'audio', // для трека типа аудио
          mimeType: 'audio/opus', // кодек opus (стандарт)
          clockRate: 48000, // частота дискретизации
          channels: 2, // стерео звук (2 канала)
          parameters: {
            useinbandfec: 1, // Forward Error Correction(исправление ошибок) для лучшего качества
            usedtx: 1, // Discontinuous Transmission (экономия трафика при тишине)
          },
        },
        {
          kind: 'video', // для трека типа видео
          mimeType: 'video/VP8', // Google's VP8 кодек - хороший кодек: широкая поддержка браузерами, хорошее качество при низкой задержке, открытый стандарт (не требует лицензий)
          clockRate: 90000, // стандартная частота для видео
          parameters: {
            'x-google-start-bitrate': 1000, // начальный битрейт - когда только подключили видео, чтобы оно сразу появилось, и битрейт постепенно появлялся, а не долгая загрузка сразу красивого видео
            'x-google-max-bitrate': 9000, // максимальный битрейт
          },
        },
        {
          kind: 'video', // если VP8 видео не поддерживается
          mimeType: 'video/H264', // кодек H264 - тоже очень широкоиспользуемый формат
          clockRate: 90000, // стандартная частота
          parameters: {
            'packetization-mode': 1, // режим пакетизации
            'profile-level-id': '42e01f',
          },
        },
      ],
    },

    // Конфигурация WebRTCTransport
    webRtcTransport: {
      listenIps: [
        {
          ip: '0.0.0.0', // слушаем на всех интерфейсах
          // ПОЗЖЕ НИЖЕ ВСТАВИТЬ PUBLIC_IP ЗАДЕПЛОЕННОГО СЕРВЕРА (некст строка 58)
          // announcedIp: '185.207.64.7', // !PROD IP
          announcedIp: process.env.SERVER_IP || '127.0.0.1', // !DEV IP
        },
      ],
      // Настройки битрейта
      initialAvailableOutgoingBitrate: 1000000, // начальная пропускная способность
      minimumAvailableOutgoingBitrate: 600000, // минимальная пропускная способность
      // SCTP настройки
      maxSctpMessageSize: 262144, // максимальный размер SCTP сообщения (256КБ)
      // SCTP - протокол для передачи данных (не медиа)
    },
  },
}

// Экспорт конфигурации
module.exports = { config, secret: 'JWTSECRETKEYACCESS' } // основаня конфигурация, секретный ключ JWT токенов
